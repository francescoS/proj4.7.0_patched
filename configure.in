dnl Process this file with autoconf to produce a configure script.

AC_PREREQ(2.59)
AC_INIT([PROJ.4 Projections], 4.7.0, [warmerdam@pobox.com], proj)

AC_CONFIG_AUX_DIR(build-aux)
AC_LANG(C)


AM_INIT_AUTOMAKE
AM_MAINTAINER_MODE
AM_CONFIG_HEADER(src/proj_config.h)


dnl Check for host type.
AC_CANONICAL_HOST

dnl Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AM_PROG_LIBTOOL



dnl Checks for compiler output filename suffixes.
C_OBJEXT
AC_EXEEXT

dnl Check for build configuration
AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL

dnl Compilation on mingw and Cygwin needs special Makefile rules
if test "$enable_shared" = yes; then
  case "$host_os" in
    mingw* | cygwin*) is_woe32dll=yes ;;
    *) is_woe32dll=no ;;
  esac
else
  is_woe32dll=no
fi
AM_CONDITIONAL([WOE32DLL], [test $is_woe32dll = yes])
if test $is_woe32dll = yes; then
  AC_DEFINE([WOE32DLL], 1,
    [Define when --enable-shared is used on mingw or Cygwin.])
fi
case "$host_os" in
  mingw* ) is_woe32_native=yes ;;
  *)       is_woe32_native=no  ;;
esac
AM_CONDITIONAL([WOE32_NATIVE], [test $is_woe32_native = yes])
if test $is_woe32_native = yes; then
  AC_DEFINE([WOE32_NATIVE], 1,
    [Define if host is mingw])
fi

case "$host_os" in
  # On Cygwin, without -no-undefined, a warning is emitted and only a static
  # library is built.
  beos*)   LTNOUNDEF='-no-undefined' ;;
  mingw*)  LTNOUNDEF='-no-undefined' ;;
  cygwin*) LTNOUNDEF='-no-undefined' ;;
  *) LTNOUNDEF='' ;;
esac
AC_SUBST([LTNOUNDEF])


dnl Checks for libraries.
AC_CHECK_LIB(m,exp,,,)

dnl We check for headers
AC_HEADER_STDC

AC_CHECK_HEADERS([stddef.h])

dnl Check for functions
AC_CHECK_FUNCS([strerror])
 


dnl ---------------------------------------------------------------------------
dnl Check for JNI support.
dnl ---------------------------------------------------------------------------

JNI_INCLUDE=
export JNI_INCLUDE

AC_ARG_WITH(jni,
[  --with-jni=dir          Include Java/JNI support, add optional include dir],,)

if test "$with_jni" = "yes" ; then

  AC_DEFINE(JNI_ENABLED,1,[Enabled for Java/JNI Support])

  AC_MSG_CHECKING(whether to enable Java/JNI support)

  AC_MSG_RESULT([enabled])

elif test "$with_jni" != "no" -a "$with_jni" != "" ; then

  AC_MSG_CHECKING(whether to enable Java/JNI support)

  if test \! -r "$with_jni/jni.h" ; then
    AC_MSG_ERROR(Did not find $with_jni/jni.h)
  fi
   
  AC_DEFINE(JNI_ENABLED,1,[Enabled for Java/JNI Support])

  AC_MSG_RESULT([enabled])

  JNI_INCLUDE="-I$with_jni"

elif test "$with_jni" = "" ; then
  AC_CHECK_HEADERS(jni.h)

  AC_MSG_CHECKING(whether to enable Java/JNI support)

  if test "$ac_cv_header_jni_h" = "no" ; then   
    AC_MSG_RESULT([disabled])
  else
    AC_MSG_RESULT([enabled])
    AC_DEFINE(JNI_ENABLED,1,[Enabled for Java/JNI Support])
  fi

else
  AC_MSG_CHECKING(whether to enable Java/JNI support)

  AC_MSG_RESULT([disabled])
fi

AC_SUBST(JNI_INCLUDE,$JNI_INCLUDE)

dnl ---------------------------------------------------------------------------
dnl Provide a mechanism to disable real mutex support (if lacking win32 or
dnl posix mutexes for instance).
dnl ---------------------------------------------------------------------------

AC_ARG_WITH([mutex],
	    AS_HELP_STRING([--without-mutex],
	       [Disable real mutex locks (lacking pthreads)]),,)

AC_MSG_CHECKING([for mutexes])
if test "$with_mutex" = yes -o x"$with_mutex" = x ; then
    MUTEX_SETTING=pthread
    AC_MSG_RESULT([enabled, pthread])
else
    MUTEX_SETTING=stub
    AC_MSG_RESULT([disabled by user])
fi

AC_SUBST(MUTEX_SETTING,$MUTEX_SETTING)

AC_OUTPUT(Makefile src/Makefile man/Makefile man/man1/Makefile \
	man/man3/Makefile nad/Makefile \
	jniwrap/Makefile jniwrap/org/Makefile jniwrap/org/proj4/Makefile)
